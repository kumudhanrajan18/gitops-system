apiVersion: kro.run/v1alpha1
kind: ResourceGroup
metadata:
  name: karpenter.kro.run
spec:
  schema:
    apiVersion: v1alpha1
    kind: KarpenterCore
    spec:
      name: string
      namespace: string
      configMapRef:
        name: string
        namespace: string
  # watchResources:
  #   - group: ""
  #     version: v1
  #     kind: ConfigMap
  resources:
  # - id: karpenterNamespace
  #   template:
  #     apiVersion: v1
  #     kind: Namespace
  #     metadata:
  #       name: karpenter
  - id: clusterConfigMap
    template:
      apiVersion: services.k8s.aws/v1alpha1
      kind: AdoptedResource
      metadata:
        name: ${schema.spec.name}-cluster-config
        namespace: ${schema.spec.namespace}
      spec:
        kubernetes:
          group: ""
          kind: ConfigMap
          metadata:
            name: ${schema.spec.configMapRef.name}
            namespace: ${schema.spec.configMapRef.namespace}
            annotations:
              services.k8s.aws/read-only: "true"

  - id: karpenterServiceAccount
    dependsOn:
      - clusterConfigMap
    template:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: karpenter-test
        namespace: kro-system
        annotations:
          eks.amazonaws.com/role-arn: ${clusterConfigMap.spec.kubernetes.metadata.data.controller_role_arn}