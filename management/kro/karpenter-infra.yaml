apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: karpenterinfra.kro.run
spec:
  schema:
    apiVersion: v1alpha1
    kind: KarpenterInfra
    spec:
      name: string
      namespace: string
      region: string
      accountId: string
  resources:
# Karpenter IAM Roles and Policies
  - id: nodeRole
    template:
      apiVersion: iam.services.k8s.aws/v1alpha1
      kind: Role
      metadata:
        namespace: ${schema.spec.namespace}
        name: ${schema.spec.name}-cluster-node-role
      spec:
        name: ${schema.spec.name}-cluster-node-role
        policies:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        assumeRolePolicyDocument: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "ec2.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }

  - id: karpenterControllerRole
    template:
      apiVersion: iam.services.k8s.aws/v1alpha1
      kind: Role
      metadata:
        namespace: ${schema.spec.namespace}
        name: ${schema.spec.name}-karpenter-controller
      spec:
        name: ${schema.spec.name}-karpenter-controller
        assumeRolePolicyDocument: |
          {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": "pods.eks.amazonaws.com"
                      },
                      "Action": [
                          "sts:TagSession",
                          "sts:AssumeRole"
                      ]
                  }
              ]
          }
        inlinePolicies:
          karpenter-policy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ec2:DescribeImages",
                    "ec2:RunInstances",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeLaunchTemplates",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInstanceTypes",
                    "ec2:DescribeInstanceTypeOfferings",
                    "ec2:DescribeAvailabilityZones",
                    "ec2:DeleteLaunchTemplate",
                    "ec2:CreateTags",
                    "ec2:CreateLaunchTemplate",
                    "ec2:CreateFleet",
                    "ec2:DescribeSpotPriceHistory",
                    "pricing:GetProducts"
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "Karpenter"
                },
                {
                  "Action": "ec2:TerminateInstances",
                  "Condition": {
                    "StringLike": {
                      "ec2:ResourceTag/karpenter.sh/nodepool": "*"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "ConditionalEC2Termination"
                },
                {
                  "Effect": "Allow",
                  "Action": "iam:PassRole",
                  "Resource": "*",
                  "Sid": "PassNodeIAMRole"
                },
                {
                  "Effect": "Allow",
                  "Action": "eks:DescribeCluster",
                  "Resource": "*",
                  "Sid": "EKSClusterEndpointLookup"
                },
                {
                  "Sid": "AllowScopedInstanceProfileCreationActions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "iam:CreateInstanceProfile"
                  ]
                },
                {
                  "Sid": "AllowScopedInstanceProfileTagActions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "iam:TagInstanceProfile"
                  ]
                },
                {
                  "Sid": "AllowScopedInstanceProfileActions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "iam:AddRoleToInstanceProfile",
                    "iam:RemoveRoleFromInstanceProfile",
                    "iam:DeleteInstanceProfile"
                  ]
                },
                {
                  "Sid": "AllowInstanceProfileReadActions",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": "iam:GetInstanceProfile"
                }
              ]
            }

  - id: karpenterPodIdentityAssociation
    template:
      apiVersion: eks.services.k8s.aws/v1alpha1
      kind: PodIdentityAssociation
      metadata:
        name: ${schema.spec.name}-karpenter-pod-identity
        namespace: ${schema.spec.namespace}
      spec:
        clusterRef:
          from:
            name: ${schema.spec.name}
        namespace: karpenter
        serviceAccount: karpenter
        roleARN: ${karpenterControllerRole.status.ackResourceMetadata.arn}


  - id: karpenterInstanceProfile
    template:
      apiVersion: iam.services.k8s.aws/v1alpha1
      kind: InstanceProfile
      metadata:
        namespace: ${schema.spec.namespace}
        name: ${schema.spec.name}-karpenter-instance-profile
      spec:
        name: ${schema.spec.name}-karpenter-instance-profile
        role: ${schema.spec.name}-cluster-node-role
      
  - id: karpenterInfoCM
    template:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: ${schema.spec.name}-karpenter-info
        namespace: argocd
      data:
        cluster_name: ${schema.spec.name}
        accountId: ${schema.spec.accountId}
        controller_role_arn: ${karpenterControllerRole.status.ackResourceMetadata.arn}
        node_role_name: ${schema.spec.name}-cluster-node-role
        instance_profile_name: ${schema.spec.name}-karpenter-instance-profile

# Karpenter Interruption Handler Resources 

  - id: interruptionQueue
    template:
      apiVersion: sqs.services.k8s.aws/v1alpha1
      kind: Queue
      metadata:
        namespace: ${schema.spec.namespace}
        name: ${schema.spec.name}-spot-interruption
      spec:
        queueName: ${schema.spec.name}-spot-interruption
        messageRetentionPeriod: "300"
        visibilityTimeout: "30"
        tags:
          Name: ${schema.spec.name}-spot-interruption

  - id: spotInterruptionRule
    template:
      apiVersion: eventbridge.services.k8s.aws/v1alpha1
      kind: Rule
      metadata:
        namespace: ${schema.spec.namespace}
        name: ${schema.spec.name}-spot-interruption
      spec:
        name: ${schema.spec.name}-spot-interruption
        eventPattern: |
          {
            "source": ["aws.ec2"],
            "detail-type": ["EC2 Spot Instance Interruption Warning"]
          }
        targets:
          - arn: ${interruptionQueue.status.ackResourceMetadata.arn}
            id: "SpotInterruptionQueue"

  - id: rebalanceRule
    template:
      apiVersion: eventbridge.services.k8s.aws/v1alpha1
      kind: Rule
      metadata:
        namespace: ${schema.spec.namespace}
        name: ${schema.spec.name}-rebalance
      spec:
        name: ${schema.spec.name}-rebalance
        eventPattern: |
          {
            "source": ["aws.ec2"],
            "detail-type": ["EC2 Instance Rebalance Recommendation"]
          }
        targets:
          - arn: ${interruptionQueue.status.ackResourceMetadata.arn}
            id: "RebalanceQueue"
